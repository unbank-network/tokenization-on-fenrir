{
    "contractName": "ERC20Detailed",
    "abi": [
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "symbol",
            "type": "string"
          },
          {
            "internalType": "uint8",
            "name": "decimals",
            "type": "uint8"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "constant": true,
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "internalType": "uint8",
            "name": "",
            "type": "uint8"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional functions from the ERC20 standard.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/akshay/workspace/somish/Konkrete/tokenization-smart-contracts/contracts/external/ERC20Detailed.sol\":\"ERC20Detailed\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/akshay/workspace/somish/Konkrete/tokenization-smart-contracts/contracts/external/ERC20Detailed.sol\":{\"keccak256\":\"0xd5e37b2e6ba53d20b37b176e9a5b170412015e6274e031015993d519e8487b2d\",\"urls\":[\"bzz-raw://117428970fc40cc9eaf3cd79d37bfa174f88f1c1c6e86de2d3a05bbd5b4a6efd\",\"dweb:/ipfs/QmPjDtKo7rZqYA4LdEThnFHWpJhnydikuhCwjKjFmFBevs\"]},\"/home/akshay/workspace/somish/Konkrete/tokenization-smart-contracts/contracts/external/interfaces/IERC20.sol\":{\"keccak256\":\"0x9c55cb89a13ba5126c82134134f37c0893c1ce44d9de6bb2886aa22a2cf81019\",\"urls\":[\"bzz-raw://0c97c2ddbb7941a4e926740d53e751583a8e49d3a1c481bec3a6155047802e2e\",\"dweb:/ipfs/QmXq7m1SMakwqqsi9GcDgfmbAqjGGoyvefBV57WEYzv5aK\"]}},\"version\":1}",
    "bytecode": "0x",
    "deployedBytecode": "0x",
    "sourceMap": "",
    "deployedSourceMap": "",
    "source": "pragma solidity 0.5.16;\n\nimport \"./interfaces/IERC20.sol\";\n\n/**\n * @dev Optional functions from the ERC20 standard.\n */\ncontract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n     * these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * > Note that this information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * `IERC20.balanceOf` and `IERC20.transfer`.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n}",
    "sourcePath": "/home/akshay/workspace/somish/Konkrete/tokenization-smart-contracts/contracts/external/ERC20Detailed.sol",
    "ast": {
      "absolutePath": "/home/akshay/workspace/somish/Konkrete/tokenization-smart-contracts/contracts/external/ERC20Detailed.sol",
      "exportedSymbols": {
        "ERC20Detailed": [
          1084
        ]
      },
      "id": 1085,
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 1028,
          "literals": [
            "solidity",
            "0.5",
            ".16"
          ],
          "nodeType": "PragmaDirective",
          "src": "0:23:5"
        },
        {
          "absolutePath": "/home/akshay/workspace/somish/Konkrete/tokenization-smart-contracts/contracts/external/interfaces/IERC20.sol",
          "file": "./interfaces/IERC20.sol",
          "id": 1029,
          "nodeType": "ImportDirective",
          "scope": 1085,
          "sourceUnit": 1452,
          "src": "25:33:5",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "baseContracts": [
            {
              "arguments": null,
              "baseName": {
                "contractScope": null,
                "id": 1030,
                "name": "IERC20",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1451,
                "src": "146:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$1451",
                  "typeString": "contract IERC20"
                }
              },
              "id": 1031,
              "nodeType": "InheritanceSpecifier",
              "src": "146:6:5"
            }
          ],
          "contractDependencies": [
            1451
          ],
          "contractKind": "contract",
          "documentation": "@dev Optional functions from the ERC20 standard.",
          "fullyImplemented": false,
          "id": 1084,
          "linearizedBaseContracts": [
            1084,
            1451
          ],
          "name": "ERC20Detailed",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "constant": false,
              "id": 1033,
              "name": "_name",
              "nodeType": "VariableDeclaration",
              "scope": 1084,
              "src": "159:20:5",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage",
                "typeString": "string"
              },
              "typeName": {
                "id": 1032,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "159:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "value": null,
              "visibility": "private"
            },
            {
              "constant": false,
              "id": 1035,
              "name": "_symbol",
              "nodeType": "VariableDeclaration",
              "scope": 1084,
              "src": "185:22:5",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage",
                "typeString": "string"
              },
              "typeName": {
                "id": 1034,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "185:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "value": null,
              "visibility": "private"
            },
            {
              "constant": false,
              "id": 1037,
              "name": "_decimals",
              "nodeType": "VariableDeclaration",
              "scope": 1084,
              "src": "213:23:5",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              },
              "typeName": {
                "id": 1036,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "213:5:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "value": null,
              "visibility": "private"
            },
            {
              "body": {
                "id": 1058,
                "nodeType": "Block",
                "src": "505:85:5",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1046,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "515:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 1047,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "523:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "src": "515:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "id": 1049,
                    "nodeType": "ExpressionStatement",
                    "src": "515:12:5"
                  },
                  {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1050,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1035,
                        "src": "537:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 1051,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "547:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "src": "537:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "id": 1053,
                    "nodeType": "ExpressionStatement",
                    "src": "537:16:5"
                  },
                  {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1054,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1037,
                        "src": "563:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 1055,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "575:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "563:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1057,
                    "nodeType": "ExpressionStatement",
                    "src": "563:20:5"
                  }
                ]
              },
              "documentation": "@dev Sets the values for `name`, `symbol`, and `decimals`. All three of\nthese values are immutable: they can only be set once during\nconstruction.",
              "id": 1059,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1044,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1039,
                    "name": "name",
                    "nodeType": "VariableDeclaration",
                    "scope": 1059,
                    "src": "440:18:5",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1038,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "440:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1041,
                    "name": "symbol",
                    "nodeType": "VariableDeclaration",
                    "scope": 1059,
                    "src": "460:20:5",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1040,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "460:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1043,
                    "name": "decimals",
                    "nodeType": "VariableDeclaration",
                    "scope": 1059,
                    "src": "482:14:5",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 1042,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "482:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "439:58:5"
              },
              "returnParameters": {
                "id": 1045,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "505:0:5"
              },
              "scope": 1084,
              "src": "427:163:5",
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1066,
                "nodeType": "Block",
                "src": "707:29:5",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1064,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "724:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "functionReturnParameters": 1063,
                    "id": 1065,
                    "nodeType": "Return",
                    "src": "717:12:5"
                  }
                ]
              },
              "documentation": "@dev Returns the name of the token.",
              "id": 1067,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "name",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1060,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "668:2:5"
              },
              "returnParameters": {
                "id": 1063,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1062,
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 1067,
                    "src": "692:13:5",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1061,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "692:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "691:15:5"
              },
              "scope": 1084,
              "src": "655:81:5",
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1074,
                "nodeType": "Block",
                "src": "903:31:5",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1072,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1035,
                      "src": "920:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "functionReturnParameters": 1071,
                    "id": 1073,
                    "nodeType": "Return",
                    "src": "913:14:5"
                  }
                ]
              },
              "documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
              "id": 1075,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "symbol",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1068,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "864:2:5"
              },
              "returnParameters": {
                "id": 1071,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1070,
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 1075,
                    "src": "888:13:5",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1069,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "888:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "887:15:5"
              },
              "scope": 1084,
              "src": "849:85:5",
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1082,
                "nodeType": "Block",
                "src": "1537:33:5",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1080,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1037,
                      "src": "1554:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "functionReturnParameters": 1079,
                    "id": 1081,
                    "nodeType": "Return",
                    "src": "1547:16:5"
                  }
                ]
              },
              "documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n     * > Note that this information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n`IERC20.balanceOf` and `IERC20.transfer`.",
              "id": 1083,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "decimals",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1076,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1506:2:5"
              },
              "returnParameters": {
                "id": 1079,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1078,
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 1083,
                    "src": "1530:5:5",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 1077,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "1530:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "1529:7:5"
              },
              "scope": 1084,
              "src": "1489:81:5",
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            }
          ],
          "scope": 1085,
          "src": "120:1452:5"
        }
      ],
      "src": "0:1572:5"
    },
    "legacyAST": {
      "absolutePath": "/home/akshay/workspace/somish/Konkrete/tokenization-smart-contracts/contracts/external/ERC20Detailed.sol",
      "exportedSymbols": {
        "ERC20Detailed": [
          1084
        ]
      },
      "id": 1085,
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 1028,
          "literals": [
            "solidity",
            "0.5",
            ".16"
          ],
          "nodeType": "PragmaDirective",
          "src": "0:23:5"
        },
        {
          "absolutePath": "/home/akshay/workspace/somish/Konkrete/tokenization-smart-contracts/contracts/external/interfaces/IERC20.sol",
          "file": "./interfaces/IERC20.sol",
          "id": 1029,
          "nodeType": "ImportDirective",
          "scope": 1085,
          "sourceUnit": 1452,
          "src": "25:33:5",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "baseContracts": [
            {
              "arguments": null,
              "baseName": {
                "contractScope": null,
                "id": 1030,
                "name": "IERC20",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1451,
                "src": "146:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$1451",
                  "typeString": "contract IERC20"
                }
              },
              "id": 1031,
              "nodeType": "InheritanceSpecifier",
              "src": "146:6:5"
            }
          ],
          "contractDependencies": [
            1451
          ],
          "contractKind": "contract",
          "documentation": "@dev Optional functions from the ERC20 standard.",
          "fullyImplemented": false,
          "id": 1084,
          "linearizedBaseContracts": [
            1084,
            1451
          ],
          "name": "ERC20Detailed",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "constant": false,
              "id": 1033,
              "name": "_name",
              "nodeType": "VariableDeclaration",
              "scope": 1084,
              "src": "159:20:5",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage",
                "typeString": "string"
              },
              "typeName": {
                "id": 1032,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "159:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "value": null,
              "visibility": "private"
            },
            {
              "constant": false,
              "id": 1035,
              "name": "_symbol",
              "nodeType": "VariableDeclaration",
              "scope": 1084,
              "src": "185:22:5",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage",
                "typeString": "string"
              },
              "typeName": {
                "id": 1034,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "185:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "value": null,
              "visibility": "private"
            },
            {
              "constant": false,
              "id": 1037,
              "name": "_decimals",
              "nodeType": "VariableDeclaration",
              "scope": 1084,
              "src": "213:23:5",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              },
              "typeName": {
                "id": 1036,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "213:5:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "value": null,
              "visibility": "private"
            },
            {
              "body": {
                "id": 1058,
                "nodeType": "Block",
                "src": "505:85:5",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1046,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "515:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 1047,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "523:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "src": "515:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "id": 1049,
                    "nodeType": "ExpressionStatement",
                    "src": "515:12:5"
                  },
                  {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1050,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1035,
                        "src": "537:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 1051,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "547:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "src": "537:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "id": 1053,
                    "nodeType": "ExpressionStatement",
                    "src": "537:16:5"
                  },
                  {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1054,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1037,
                        "src": "563:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "id": 1055,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1043,
                        "src": "575:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "563:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1057,
                    "nodeType": "ExpressionStatement",
                    "src": "563:20:5"
                  }
                ]
              },
              "documentation": "@dev Sets the values for `name`, `symbol`, and `decimals`. All three of\nthese values are immutable: they can only be set once during\nconstruction.",
              "id": 1059,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1044,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1039,
                    "name": "name",
                    "nodeType": "VariableDeclaration",
                    "scope": 1059,
                    "src": "440:18:5",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1038,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "440:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1041,
                    "name": "symbol",
                    "nodeType": "VariableDeclaration",
                    "scope": 1059,
                    "src": "460:20:5",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1040,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "460:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1043,
                    "name": "decimals",
                    "nodeType": "VariableDeclaration",
                    "scope": 1059,
                    "src": "482:14:5",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 1042,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "482:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "439:58:5"
              },
              "returnParameters": {
                "id": 1045,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "505:0:5"
              },
              "scope": 1084,
              "src": "427:163:5",
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1066,
                "nodeType": "Block",
                "src": "707:29:5",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1064,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "724:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "functionReturnParameters": 1063,
                    "id": 1065,
                    "nodeType": "Return",
                    "src": "717:12:5"
                  }
                ]
              },
              "documentation": "@dev Returns the name of the token.",
              "id": 1067,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "name",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1060,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "668:2:5"
              },
              "returnParameters": {
                "id": 1063,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1062,
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 1067,
                    "src": "692:13:5",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1061,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "692:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "691:15:5"
              },
              "scope": 1084,
              "src": "655:81:5",
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1074,
                "nodeType": "Block",
                "src": "903:31:5",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1072,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1035,
                      "src": "920:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "functionReturnParameters": 1071,
                    "id": 1073,
                    "nodeType": "Return",
                    "src": "913:14:5"
                  }
                ]
              },
              "documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
              "id": 1075,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "symbol",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1068,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "864:2:5"
              },
              "returnParameters": {
                "id": 1071,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1070,
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 1075,
                    "src": "888:13:5",
                    "stateVariable": false,
                    "storageLocation": "memory",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1069,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "888:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "887:15:5"
              },
              "scope": 1084,
              "src": "849:85:5",
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1082,
                "nodeType": "Block",
                "src": "1537:33:5",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1080,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1037,
                      "src": "1554:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "functionReturnParameters": 1079,
                    "id": 1081,
                    "nodeType": "Return",
                    "src": "1547:16:5"
                  }
                ]
              },
              "documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n     * > Note that this information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n`IERC20.balanceOf` and `IERC20.transfer`.",
              "id": 1083,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "decimals",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1076,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1506:2:5"
              },
              "returnParameters": {
                "id": 1079,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1078,
                    "name": "",
                    "nodeType": "VariableDeclaration",
                    "scope": 1083,
                    "src": "1530:5:5",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 1077,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "1530:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "value": null,
                    "visibility": "internal"
                  }
                ],
                "src": "1529:7:5"
              },
              "scope": 1084,
              "src": "1489:81:5",
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            }
          ],
          "scope": 1085,
          "src": "120:1452:5"
        }
      ],
      "src": "0:1572:5"
    },
    "compiler": {
      "name": "solc",
      "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
    },
    "networks": {},
    "schemaVersion": "3.2.0",
    "updatedAt": "2020-07-16T04:28:20.451Z",
    "devdoc": {
      "details": "Optional functions from the ERC20 standard.",
      "methods": {
        "allowance(address,address)": {
          "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
        },
        "approve(address,uint256)": {
          "details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
        },
        "balanceOf(address)": {
          "details": "Returns the amount of tokens owned by `account`."
        },
        "constructor": {
          "details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
        },
        "decimals()": {
          "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
        },
        "name()": {
          "details": "Returns the name of the token."
        },
        "symbol()": {
          "details": "Returns the symbol of the token, usually a shorter version of the name."
        },
        "totalSupply()": {
          "details": "Returns the amount of tokens in existence."
        },
        "transfer(address,uint256)": {
          "details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
        },
        "transferFrom(address,address,uint256)": {
          "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
        }
      }
    },
    "userdoc": {
      "methods": {}
    }
  }